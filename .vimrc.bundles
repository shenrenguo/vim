" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={{{,}}} foldlevel=0 foldmethod=marker spell:

" Environment {{{

    " Basics {{{
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }}}

    " Windows Compatible {{{
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

          " Be nice and check for multi_byte even if the config requires
          " multi_byte support most of the time
          if has("multi_byte")
            " Windows cmd.exe still uses cp850. If Windows ever moved to
            " Powershell as the primary terminal, this would be utf-8
            set termencoding=cp850
            " Let Vim use utf-8 internally, because many scripts require this
            set encoding=utf-8
            setglobal fileencoding=utf-8
            " Windows has traditionally used cp1252, so it's probably wise to
            " fallback into cp1252 instead of eg. iso-8859-15.
            " Newer Windows files might contain utf-8 or utf-16 LE so we might
            " want to try them first.
            set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
          endif
        endif
    " }}}

    " Setup Bundle Support {{{
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }}}

    " Add an UnBundle command {{{
    function! UnBundle(arg, ...)
      let bundle = vundle#config#init_bundle(a:arg, a:000)
      call filter(g:vundle#bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    endfunction

    com! -nargs=+         UnBundle
    \ call UnBundle(<args>)
    " }}}

" }}}

" Bundles {{{

    " Deps {{{
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'
        Bundle 'mileszs/ack.vim'
    " }}}

    let g:bundle_groups=['general', 'programming',  'html&css', 'javascript', 'php',  'python', 'ruby', 'go', 'scala', 'haskell', 'puppet', 'elixir', 'rust', 'toml', 'markdown', ]

    " General {{{
        if count(g:bundle_groups, 'general')
            Bundle 'chriskempson/base16-vim'
            Bundle 'flazz/vim-colorschemes'
            Bundle 'bling/vim-airline'
            Bundle 'easymotion/vim-easymotion'
            Bundle 'kristijanhusak/vim-multiple-cursors'
            Bundle 'ctrlpvim/ctrlp.vim'
            Bundle 'scrooloose/nerdtree'
            Bundle 'jistr/vim-nerdtree-tabs'
            Bundle 'mbbill/undotree'
            Bundle 'vim-scripts/matchit.zip'
            Bundle 'tpope/vim-surround'
            Bundle 'jiangmiao/auto-pairs'
            Bundle 'tpope/vim-repeat'
            Bundle 'nathanaelkane/vim-indent-guides'
        endif
    " }}}

    "Programming {{{
        if count(g:bundle_groups, 'programming')
            Bundle 'majutsushi/tagbar'
            Bundle 'scrooloose/syntastic'
            Bundle 'Valloric/YouCompleteMe'
            Bundle 'SirVer/ultisnips'
            Bundle 'honza/vim-snippets'
            Bundle 'scrooloose/nerdcommenter'
            Bundle 'godlygeek/tabular'
            Bundle 'tpope/vim-fugitive'
            Bundle 'mattn/gist-vim'
            Bundle 'mattn/webapi-vim'
        endif
    " }}}

    " HTML & CSS {{{
        if count(g:bundle_groups, 'html&css')
            Bundle 'amirh/HTML-AutoCloseTag'
            Bundle 'hail2u/vim-css3-syntax'
            Bundle 'skammer/vim-css-color'
            Bundle 'groenewege/vim-less'
            Bundle 'tpope/vim-haml'
        endif
    " }}}

    " Javascript {{{
        if count(g:bundle_groups, 'javascript')
            Bundle 'pangloss/vim-javascript'
            Bundle 'kchmck/vim-coffee-script'
            Bundle 'elzr/vim-json'
            Bundle 'briancollins/vim-jst'
            Bundle 'ternjs/tern_for_vim'
            Bundle 'lukaszkorecki/CoffeeTags'
        endif
    " }}}

    " PHP {{{
        if count(g:bundle_groups, 'php')
            Bundle 'spf13/PIV'
            Bundle 'arnaud-lb/vim-php-namespace'
            Bundle 'beyondwords/vim-twig'
        endif
    " }}}

    " Python {{{
        if count(g:bundle_groups, 'python')
            Bundle 'klen/python-mode'
            Bundle 'yssource/python.vim'
            Bundle 'python_match.vim'
            Bundle 'pythoncomplete'
        endif
    " }}}

    " Ruby {{{
        if count(g:bundle_groups, 'ruby')
            Bundle 'tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
        endif
    " }}}

    " Go Lang {{{
        if count(g:bundle_groups, 'go')
            Bundle 'fatih/vim-go'
        endif
    " }}}

    " Scala {{{
        if count(g:bundle_groups, 'scala')
            Bundle 'derekwyatt/vim-scala'
            Bundle 'derekwyatt/vim-sbt'
            Bundle 'xptemplate'
        endif
    " }}}

    " Haskell {{{
        if count(g:bundle_groups, 'haskell')
            Bundle 'eagletmt/ghcmod-vim'
            Bundle 'travitch/hasksyn'
            Bundle 'dag/vim2hs'
            Bundle 'Twinside/vim-haskellConceal'
            Bundle 'Twinside/vim-haskellFold'
            Bundle 'lukerandall/haskellmode-vim'
            Bundle 'eagletmt/neco-ghc'
            Bundle 'Shougo/vimproc.vim'
            Bundle 'adinapoli/cumino'
            Bundle 'bitc/vim-hdevtools'
        endif
    " }}}

    " Puppet {{{
        if count(g:bundle_groups, 'puppet')
            Bundle 'rodjek/vim-puppet'
        endif
    " }}}

    " Elixir {{{
        if count(g:bundle_groups, 'elixir')
            Bundle 'elixir-lang/vim-elixir'
            Bundle 'carlosgaldino/elixir-snippets'
            Bundle 'mattreduce/vim-mix'
        endif
    " }}}

    " rust {{{
        if count(g:bundle_groups, 'rust')
            Bundle 'rust-lang/rust.vim'
        endif
    " }}}

    " TOML {{{
        if count(g:bundle_groups, 'toml')
            Bundle 'cespare/vim-toml'
        endif
    " }}}

    " Markdown {{{
        if count(g:bundle_groups, 'markdown')
            Bundle 'tpope/vim-markdown'
            Bundle 'spf13/vim-preview'
        endif
    " }}}

" }}}
